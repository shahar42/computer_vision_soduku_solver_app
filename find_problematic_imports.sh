#!/bin/bash

# Script to find problematic relative imports in Python files
# Specifically looking for "from .." patterns that need to be changed

echo "=== Checking for problematic relative imports ==="
echo

# Colors for output formatting
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Counter for problematic files
problem_count=0
problem_files=()
import_lines=()

# Find all Python files in the project directory (excluding venv310)
python_files=$(find . -type f -name "*.py" | grep -v "/venv310/" | sort)

for file in $python_files; do
    # Check for "from .." imports in the file
    problematic_lines=$(grep -n "^[[:space:]]*from[[:space:]]*\.\." "$file" | sed "s/^/    Line /")
    
    if [ -n "$problematic_lines" ]; then
        problem_count=$((problem_count + 1))
        problem_files+=("$file")
        
        echo -e "${YELLOW}Found problematic imports in: ${NC}${file}"
        echo -e "${RED}$problematic_lines${NC}"
        echo
        
        # Extract the lines with problematic imports
        while IFS= read -r line; do
            line_num=$(echo "$line" | sed 's/^\s*Line \([0-9]*\).*/\1/')
            import_content=$(grep -n "" "$file" | grep "^$line_num:" | sed "s/^$line_num://")
            import_lines+=("$file:$line_num:$import_content")
        done <<< "$problematic_lines"
    fi
done

# Print summary
echo "=== SUMMARY ==="
if [ $problem_count -eq 0 ]; then
    echo -e "${GREEN}No problematic imports found.${NC}"
else
    echo -e "${RED}Found problematic imports in $problem_count files:${NC}"
    for file in "${problem_files[@]}"; do
        echo "- $file"
    done
    
    echo
    echo "These imports need to be changed from 'from ..' to 'from' (removing the ..)."
    echo "Example: 'from ..utils.error_handling import X' â†’ 'from utils.error_handling import X'"
    
    # Offer to create a fix script
    echo
    echo -e "${YELLOW}Would you like to generate a script to fix these imports? (y/n)${NC}"
    read -r generate_fix
    
    if [[ $generate_fix == "y" || $generate_fix == "Y" ]]; then
        echo "#!/bin/bash" > fix_imports.sh
        echo "" >> fix_imports.sh
        echo "# Script to fix problematic relative imports" >> fix_imports.sh
        echo "# Generated by find_problematic_imports.sh" >> fix_imports.sh
        echo "" >> fix_imports.sh
        echo "echo \"Fixing problematic imports...\"" >> fix_imports.sh
        echo "" >> fix_imports.sh
        
        for file in "${problem_files[@]}"; do
            echo "echo \"Fixing $file...\"" >> fix_imports.sh
            echo "sed -i 's/from \.\./from /g' \"$file\"" >> fix_imports.sh
            echo "" >> fix_imports.sh
        done
        
        echo "echo \"All imports fixed!\"" >> fix_imports.sh
        echo "echo \"Please test your code to ensure everything works correctly.\"" >> fix_imports.sh
        
        chmod +x fix_imports.sh
        echo -e "${GREEN}Fix script generated as 'fix_imports.sh'${NC}"
        echo "Review and run this script to fix the imports."
    fi
fi

# Special check for train.py import of initialize_settings
if [ -f "train.py" ]; then
    if grep -q "from config import initialize_settings" "train.py"; then
        echo
        echo -e "${YELLOW}Special case found in train.py:${NC}"
        echo "    'from config import initialize_settings' should be changed to:"
        echo "    'from config.settings import initialize_settings'"
        
        if [[ $generate_fix == "y" || $generate_fix == "Y" ]]; then
            echo "" >> fix_imports.sh
            echo "# Fix special case in train.py" >> fix_imports.sh
            echo "echo \"Fixing special case in train.py...\"" >> fix_imports.sh
            echo "sed -i 's/from config import initialize_settings/from config.settings import initialize_settings/g' \"train.py\"" >> fix_imports.sh
        fi
    fi
fi

echo
echo "Remember to test your code after making any changes!"
